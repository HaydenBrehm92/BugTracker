@model BugTracker.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password - BuggyBoy";
}

<style>
    #changePassWrap{
        background-color:whitesmoke !important;
    }
</style>

<title>@ViewBag.Title.</title>
<div class="container-fluid" id="changePassWrap">
    <div class="row">
        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
        <div class="col-12">
            <h2 class="mt-2">Change Password</h2>
        </div>
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group">
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control col-12", @placeholder = "Old Password" })
                @Html.ValidationMessageFor(m => m.OldPassword, null, new { @class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control col-12", @placeholder = "New Password" })
                @Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control col-12", @placeholder = "Confirm Password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="col-12">
                    <button type="submit" class="btn btn-danger btn-block">Change Password</button>
                </div>
            </div>
        }
    </div>
</div>

@*@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Change Password</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Change password" class="btn btn-default" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@