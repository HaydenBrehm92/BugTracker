@model BugTracker.Models.ResetPasswordViewModel
@{
    Layout = null;
    ViewBag.Title = "Reset password";
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <style>
        .card {
            border-width: 2px !important;
            border-style: solid !important;
            border-color: #dc3545;
            max-width: 75vw;
        }

        html {
            height: 100%;
            width: 100%;
        }

        body {
            height: 100%;
            width: 100%;
            overflow: auto;
            background-color: #F5F5F5;
        }

        .img-responsive {
            display: inline-block;
            max-width: 267px;
            max-height: 101px;
        }

            .img-responsive img {
                max-width: 100%;
                height: auto;
            }
    </style>
</head>
<body>
    <div id="body">
        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="container d-flex h-100 justify-content-center align-self-center">
                <div class="col-lg-12">
                    <div class="text-center">
                        <img class="img-responsive pb-3 " src="~/Content/Logo2.png" alt="" />
                    </div>
                    <div class="card rounded w-50 shadow bg-white mx-auto">
                        <h3 class="card-header bg-danger pb-2 m-0 text-white text-center">Reset Password</h3>
                        <div class="card-body row">
                            <div class="col-12">
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                            </div>
                            @Html.HiddenFor(model => model.Code)
                            <div class="form-group col-12">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control col-12", @id = "EmailResetPass", @placeholder = "Email" })

                                <small>@Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger " })</small>
                            </div>
                            <div class="form-group col-12">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control col-12", @id = "NewPassword", @placeholder = "Password" })
                                <small>@Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger " })</small>
                            </div>
                            <div class="form-group col-12">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control col-12", @id = "ConfirmNewPassword", @placeholder = "Confirm Password" })
                                <small>@Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger " })</small>
                            </div>
                            <div class="form-group pt-3 col-12">
                                <button type="submit" id="btnPassReset" class="col-12 btn btn-primary btn-block bg-danger border-danger">Reset</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
</body>
</html>

@*@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Reset your password.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Reset" />
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
